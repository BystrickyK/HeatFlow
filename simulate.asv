%%close all, clear allalpha = 0.0001;dx = 0.05;dt = 0.01;Fo = alpha * dt / dx^2;%%% Set up modelside_elements = 100; % number of elements on each siden_elements = side_elements^2;% Create a general 2D-plate heat transfer modelsys = create_model_fnum(side_elements, Fo);  % Specify the Fourier number and set up time-stepping schemeT_forward = sys;  % Input T_k, output T_k+1% Vector of initial node temperaturesimg = imread('cvut.png');img = rgb2gray(img);img = imresize(img, [side_elements, side_elements]);img = 255-img;img = img./255*5;T = double(reshape(img, [n_elements, 1]));%% Simulatestamp = '1000_cvut_logo';savename = string(side_elements) + '_' + stamp;if isfile(savename + '.mat')    disp("Loading solution for stamp: " + stamp)    file = load(savename);    simdata = file.simdata;else    disp("Calculating solution for stamp: " + stamp)    simdata = {};    simdata{end+1} = T;    k_steps = 500;    for k = 1:k_steps       disp(k)       simdata{end+1} = T_forward(simdata{end});     end    save(savename, 'simdata')end%% Visualization% Reshape the vector of node temperatures into a 2D array for plottingreshape_T = @(T) reshape(flip(T), [side_elements, side_elements]);Tk = reshape_T(T);[X, Y] = meshgrid(0:dx:side_elements*dx-dx, 0:dx:side_elements*dx-dx);f = figure('Position', [0 0 1000 1000]);ax1 = gca;splot = surfc(ax1, X, Y, Tk, 'facealpha', 0.75);splot(1).FaceColor = 'interp';splot(1).EdgeColor = 'none';% splot(1).EdgeAlpha = 0.5;splot(2).LevelStep = 0.25;axis equalhold onax1.ZLimMode = 'manual';ax1.ZLim = [0 5];   % Z limit is constantax1.CLim = [0 5];  % Colorbar rangecolorbarcolormap(turbo)gradfun = @(T) gradient(T, dx);[gradX, gradY] = gradfun(Tk);% norms = arrayfun(@(x,y)norm([x,y]), gradX, gradY);% gradX_ = gradX./norms;% gradY_ = gradY./norms;g1 = quiver3(ax1, X, Y, Tk, -gradX, -gradY, X.*0);g1.AutoScale = 'on';g1.AutoScaleFactor = 0.1;hold offview(0, 90)drawnowframes = [getframe(f)];t = round(logspace(-1, 0, 200)*length(simdata));t = t - t(1) + 1;for k = t        T = simdata{k};    Tk = reshape_T(T);            splot(1).ZData = Tk;    splot(2).ZData = Tk;    [gradX, gradY] = gradfun(Tk);    g1.ZData = Tk;    g1.UData = -gradX;    g1.VData = -gradY;    title(k*dt);%         view(300, sin(0.01*k)^2*30+60)    drawnow;            frames(end+1) = getframe(f);   endwriterObj = VideoWriter('cvut_heat2');writerObj.FrameRate = 20;open(writerObj);for k = 2:length(frames)   frame = frames(k);   writeVideo(writerObj, frame);endclose(writerObj);